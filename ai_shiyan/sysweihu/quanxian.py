# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'quanxian.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import sys

sys.path.append("../")  # 返回上层路径
from service import service, myservice


class Ui_MainWindow(QMainWindow):
    # 构造方法
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        self.setWindowFlags(QtCore.Qt.MSWindowsFixedSizeDialogHint)  # 只显示最小化和关闭按钮
        self.setupUi(self)  # 初始化窗体设置
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(603, 397)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.tbUser = QtWidgets.QTableWidget(self.centralwidget)
        self.tbUser.setObjectName("tbUser")
        self.tbUser.setColumnCount(2)
        self.tbUser.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tbUser.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbUser.setHorizontalHeaderItem(1, item)
        self.gridLayout.addWidget(self.tbUser, 0, 0, 1, 3)
        self.editName = QtWidgets.QLineEdit(self.centralwidget)
        self.editName.setObjectName("editName")
        self.gridLayout.addWidget(self.editName, 2, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setObjectName("comboBox")
        self.gridLayout.addWidget(self.comboBox, 2, 2, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.btnAdd = QtWidgets.QPushButton(self.centralwidget)
        self.btnAdd.setObjectName("btnAdd")
        self.gridLayout_2.addWidget(self.btnAdd, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.query()
        self.tbUser.itemClicked.connect(self.getItem)  # 获取选中的单元格数据
        self.comboBox.addItem("普通")
        self.comboBox.addItem("会员")
        self.btnAdd.clicked.connect(self.change)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "权限设置"))
        item = self.tbUser.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "用户名"))
        item = self.tbUser.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "账号类型"))
        self.label_2.setText(_translate("MainWindow", "用户名："))
        self.btnAdd.setText(_translate("MainWindow", "设置"))

    def change(self):
        t=self.editName.text()
        cl=self.comboBox.currentText()
        sql="update tb_user set Uclass = '{}' where Uuser = '{}'".format(cl,t)
        result=myservice.exec(sql)
        self.query()

    def query(self):
        self.tbUser.setRowCount(0)  # 清空表格中的所有行
        result = myservice.query2("select Uuser,Uclass from tb_user where Uclass<>'管理员'")
        row = len(result)
        self.tbUser.setRowCount(row)
        for i in range(row):  # 遍历行
            for j in range(self.tbUser.columnCount()):  # 遍历列
                data = QTableWidgetItem(str(result[i][j]))  # 转换后可插入表格
                self.tbUser.setItem(i, j, data)  # 设置每个单元格的数据

    # 获取选中的表格内容
    def getItem(self, item):
        if item.column() == 0:  # 如果单击的是第一列
            self.select = item.text()  # 获取单击的单元格文本
            self.editName.setText(self.select)  # 显示在学生编号文本框中


if __name__ == '__main__':
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow() # 创建窗体对象
    ui = Ui_MainWindow() # 创建PyQt5设计的窗体对象
    ui.setupUi(MainWindow) # 调用PyQt5窗体的方法对窗体对象进行初始化设置
    MainWindow.show() # 显示窗体
    sys.exit(app.exec_()) # 程序关闭时退出进程
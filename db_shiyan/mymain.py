# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mymain.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from service import service, myservice
from baseinfo import student
from query import studentinfo
from settings import classes,grade
from zhongxin import user
from maishu import maishuapply,mymaishu
from PyQt5.QtWidgets import QMessageBox
from buybook import buybook, mybuy,last10
from sysweihu import quanxian,weihu


class Ui_MainWindow(QMainWindow):
    # 构造方法
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        self.setWindowFlags(QtCore.Qt.MSWindowsFixedSizeDialogHint)  # 只显示最小化和关闭按钮
        self.setupUi(self) # 初始化窗体设置

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(451, 290)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/newPrefix/images/appstu.ICO"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("")
        MainWindow.setIconSize(QtCore.QSize(32, 32))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        # self.centralwidget.setStyleSheet("border-image: url(:/newPrefix/images/main.jpg);")
        self.centralwidget.setStyleSheet("border-image: url(C:/Users/zqf/Desktop/shiyan/images/main.jpg);")
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 451, 22))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        self.menu_4 = QtWidgets.QMenu(self.menubar)
        self.menu_4.setObjectName("menu_4")
        #Notice!!!下面可以隐藏菜单栏里面的东西
        if myservice.Uclass !='管理员':
            self.menu_4.menuAction() .setVisible(False)
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionziliao = QtWidgets.QAction(MainWindow)
        self.actionziliao.setObjectName("actionziliao")
        self.actionclass = QtWidgets.QAction(MainWindow)
        self.actionclass.setObjectName("actionclass")
        self.actionsubject = QtWidgets.QAction(MainWindow)
        self.actionsubject.setObjectName("actionsubject")
        self.actionexamkinds = QtWidgets.QAction(MainWindow)
        self.actionexamkinds.setObjectName("actionexamkinds")
        self.actionapply = QtWidgets.QAction(MainWindow)
        self.actionapply.setObjectName("actionapply")
        self.actionmymaishu = QtWidgets.QAction(MainWindow)
        self.actionmymaishu.setObjectName("actionmymaishu")
        self.actionsearchbook = QtWidgets.QAction(MainWindow)
        self.actionsearchbook.setObjectName("actionsearchbook")
        self.actionaccommand = QtWidgets.QAction(MainWindow)
        self.actionaccommand.setObjectName("actionaccommand")
        self.mybuy = QtWidgets.QAction(MainWindow)
        self.mybuy.setObjectName("mybuy")
        self.last10 = QtWidgets.QAction(MainWindow)
        self.last10.setObjectName("last10")
        self.actionuserinfo = QtWidgets.QAction(MainWindow)
        self.actionuserinfo.setObjectName("actionuserinfo")
        self.actiongrant = QtWidgets.QAction(MainWindow)
        self.actiongrant.setObjectName("actiongrant")
        self.actionquit = QtWidgets.QAction(MainWindow)
        self.actionquit.setObjectName("actionquit")
        self.menu.addAction(self.actionziliao)
        self.menu.addAction(self.actionquit)
        self.menu_2.addAction(self.actionapply)
        self.menu_2.addAction(self.actionmymaishu)
        self.menu_3.addAction(self.actionsearchbook)
        self.menu_3.addAction(self.actionaccommand)
        self.menu_3.addAction(self.mybuy)
        self.menu_3.addAction(self.last10)
        self.menu_4.addAction(self.actionuserinfo)
        self.menu_4.addAction(self.actiongrant)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())
        self.menubar.addAction(self.menu_4.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        datetime = QtCore.QDateTime.currentDateTime()  # 获取当前日期时间
        time = datetime.toString("yyyy-MM-dd HH:mm:ss")  # 对日期时间进行格式化
        # 状态栏中显示登录用户、登录时间
        self.statusbar.showMessage("你好，" + myservice.userName + ":-) | 登录时间：" + time + "  | 欢迎回来", 0)
        # 为基础设置菜单中的QAction绑定triggered信号
        self.menu.triggered[QtWidgets.QAction].connect(self.openzhongxin)
        # 为基本信息管理菜单中的QAction绑定triggered信号
        self.menu_2.triggered[QtWidgets.QAction].connect(self.openmaishu)
        # 为系统查询菜单中的QAction绑定triggered信号
        self.menu_3.triggered[QtWidgets.QAction].connect(self.openshucheng)
        # 为系统管理菜单中的QAction绑定triggered信号
        self.menu_4.triggered[QtWidgets.QAction].connect(self.opensys)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "旧书买卖"))
        self.menu.setTitle(_translate("MainWindow", "个人中心"))
        self.menu_2.setTitle(_translate("MainWindow", "卖书中心"))
        self.menu_3.setTitle(_translate("MainWindow", "书城"))
        self.menu_4.setTitle(_translate("MainWindow", "系统管理"))
        self.actionziliao.setText(_translate("MainWindow", "修改资料"))
        self.actionclass.setText(_translate("MainWindow", "班级设置"))
        self.actionsubject.setText(_translate("MainWindow", "考试科目设置"))
        self.actionexamkinds.setText(_translate("MainWindow", "考试类别"))
        self.actionapply.setText(_translate("MainWindow", "卖书申请"))
        self.actionmymaishu.setText(_translate("MainWindow", "我的卖书"))
        self.actionsearchbook.setText(_translate("MainWindow", "搜索书本"))
        self.actionaccommand.setText(_translate("MainWindow", "编辑推荐"))
        self.mybuy.setText(_translate("MainWindow", "我的购买"))
        self.last10.setText(_translate("MainWindow", "最新十本书"))
        self.actionuserinfo.setText(_translate("MainWindow", "用户维护"))
        self.actiongrant.setText(_translate("MainWindow", "权限赋予"))
        self.actionquit.setText(_translate("MainWindow", "退出"))

    def openzhongxin(self,m):
        if m.text() == "修改资料":
            self.m = user.Ui_MainWindow()
            self.m.show()  # 显示窗体
        elif m.text() == "退出":
            sys.exit(app.exec_())
    def openmaishu(self,m):
        if m.text() == "卖书申请":
            self.m = maishuapply.Ui_MainWindow()
            self.m.show()  # 显示窗体
        elif m.text() == "我的卖书":
            self.m = mymaishu.Ui_MainWindow()
            self.m.show()  # 显示窗体
    def openshucheng(self,m):
        if m.text() == "搜索书本":
            self.m = buybook.Ui_MainWindow()
            self.m.show()  # 显示窗体
        elif m.text() == "我的购买":
            self.m = mybuy.Ui_MainWindow()
            self.m.show()
        elif m.text() == "最新十本书":
            self.m = last10.Ui_MainWindow()
            self.m.show()
        elif m.text() == "编辑推荐":
            QMessageBox.information(self,"建设中","忙着验收，以后做",QMessageBox.Yes|QMessageBox.No,QMessageBox.Yes)
    def opensys(self,m):
        if m.text() == "用户维护":
            self.m = weihu.Ui_MainWindow()
            self.m.show()  # 显示窗体
        elif m.text() == "权限赋予":
            self.m = quanxian.Ui_MainWindow()
            self.m.show()  # 显示窗体
import img_rc
if __name__ == '__main__':
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow() # 创建窗体对象
    ui = Ui_MainWindow() # 创建PyQt5设计的窗体对象
    ui.setupUi(MainWindow) # 调用PyQt5窗体的方法对窗体对象进行初始化设置
    MainWindow.show() # 显示窗体
    sys.exit(app.exec_()) # 程序关闭时退出进程
